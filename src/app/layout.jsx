import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import Login from './(auth)/login/page'
import AuthProvider from '@/context/auth-provider'
import { Toaster } from '@/components/ui/toast-container'
import { fetchServerData, serverLogout } from './api/_lib/server-fetch'
import { cookies } from 'next/headers'
import { getAuthOrRedirect, isExpired } from '@/lib/check-token'
import GlobalProvider from '@/context/global-provider'
import { Divide } from 'lucide-react'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({ children }) {
  const cookieStore = await cookies()
  const uid = cookieStore.get('uid')?.value

  const expRaw = cookieStore.get('expires_at')?.value
  const expiry = isExpired(expRaw)

  let currentUser = null

  if (!expiry && uid) {
    const response = await fetchServerData(`users/${uid}`, 'GET')
    currentUser = response?.message || null
  }

  //console.log('currentUser :>> ', currentUser)

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider
          authFallback={<Login />}
          expiry={expiry}
          uid={uid}
          currentUser={currentUser}
        >
          {children}
        </AuthProvider>

        <Toaster />
      </body>
    </html>
  )
}
